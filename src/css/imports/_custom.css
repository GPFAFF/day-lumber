.list-item {
  padding: 2px 0;
  list-style-type: disc;
}

.four-oh-four {
  height: 50vh;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}

.four-oh-four-title {
  font-size: 40px;
  display: block;
}

.four-oh-four > h2 > a {
  display: block;
  margin-top: 40px;
}

.flex-center {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.contact-bar {
  width: 100%;
  color: white;
  font-weight: bold;
  text-align: center;
  line-height: 1;
  padding: 20px 0;
}

.contact-bar > div {
  margin-top: 8px;
}

.contact-bar > div > a {
  line-height: 1;
  text-decoration: none;
  padding-top: 4px;
}

.contact-bar > a:hover {
  cursor: pointer;
}

li {
  position: relative;
}

ul > li > .dropdown {
  visibility: hidden;
  opacity: 0;
  min-width: 7rem;
  position: absolute;
  transition: all 0.5s ease;
  left: -20px;
  top: 80px;
  text-align: center;
  display: none;
}

.dropdown-list {
  display: block;
  float: left;
  padding: 1rem;
  position: relative;
  text-decoration: none;
  transition-duration: 0.5s;
}


.dropdown-list:hover,
.dropdown-list:focus-within {
  cursor: pointer;
}

.dropdown-list:focus-within a {
outline: none;
}

ul li:hover > .dropdown,
ul li:focus-within > .dropdown,
ul li .dropdown:hover,
ul li .dropdown:focus {
   visibility: visible;
   opacity: 1;
   display: block;
}

.flex-two {
    display: flex;
    flex-wrap: nowrap;
}

.flex-child {
  display: flex;
}

.flex-child > input:nth-of-type(odd) {
  margin-right: 5px;
}

.flex-child > input:nth-of-type(even) {
  margin-left: 5px;
}

.jumbotron {
  text-align: center;
}

.animate-hover {
  position: relative;
}

.animate-hover::before {
  content: "";
  position: absolute;
  width: 100%;
  height: 2px;
  bottom: 0;
  left: 0;
  top: 35px;
  background-color: white;
  visibility: hidden;
  transform: scaleX(0);
  transition: all 0.3s ease-in-out 0s;
}

.animate-hover:hover::before {
  visibility: visible;
  transform: scaleX(1);
}

.checkbox input[type="checkbox"] {
  opacity: 0;
}

.checkbox label {
  position: relative;
  display: inline-block;
  color: black;
  background-color: white;
  /*16px width of fake checkbox + 6px distance between fake checkbox and text*/
  padding-left: 42px;
  transition: none;
}

.checkbox input:hover {
  cursor: pointer;
}

.checkbox label::before,
.checkbox label::after {
  position: absolute;
  content: "";
  top: unset;
  left: unset;

  /*Needed for the line-height to take effect*/
  display: inline-block;
}

/*Outer box of the fake checkbox*/
.checkbox label::before{
  height: 24px;
  width: 24px;

  border: 1px solid;
  left: 0px;

  /*(24px line-height - 16px height of fake checkbox) / 2 - 1px for the border
   *to vertically center it.
   */
  top: 0;
}

/*Checkmark of the fake checkbox*/
.checkbox label::after {
  height: 5px;
  width: 9px;
  border-left: 4px solid;
  border-bottom: 4px solid;
  transform: rotate(-45deg);
  left: 6px;
  top: 7px;
}

/*Hide the checkmark by default*/
.checkbox input[type="checkbox"] + label::after {
  content: none;
}

/*Unhide on the checked state*/
.checkbox input[type="checkbox"]:checked + label::after {
  content: "";
}

/*Adding focus styles on the outer-box of the fake checkbox*/
.checkbox input[type="checkbox"]:focus + label::before {
  outline: rgb(59, 153, 252) auto 5px;
  transform: none;
}

/*Adding focus styles on the outer-box of the fake checkbox*/
.checkbox input[type="checkbox"]:focus + label {
  transform: none;
}

.two-across, .three-across {
  display: flex;
}

.two-across > div, .three-across > div {
  flex: 1;
}

.cflex {
  display: flex;
  justify-content: center;
}

.hours-container {
  display: flex;
}

.hours {
  flex: 1;
}

@media (--breakpoint-sm) {
  input:focus,
  textarea:focus {
    border: 2px solid var(--primary);
  }
}
